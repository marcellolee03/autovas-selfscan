#!/bin/bash

# Aplicar configurações de sysctl para as vulnerabilidades 3 e 7
sysctl -w net.ipv4.tcp_timestamps=0
if ! grep -q "net.ipv4.tcp_timestamps = 0" /etc/sysctl.conf; then
    echo "net.ipv4.tcp_timestamps = 0" >> /etc/sysctl.conf
fi

iptables -A INPUT -p icmp --icmp-type timestamp-request -j DROP
iptables -A OUTPUT -p icmp --icmp-type timestamp-reply -j DROP

# Correção para servidores web (vulnerabilidades 1, 4, 5, 6)
for svc in "apache2" "nginx"; do
    if [[ $(systemctl is-active $svc 2>/dev/null) == "active" ]]; then
        case $svc in
            apache2)
                a2enmod ssl rewrite
                conf_file="/etc/apache2/sites-available/default-ssl.conf"
                if [ ! -f "$conf_file" ]; then
                    cp /etc/apache2/sites-available/default-ssl.conf.dpkg-dist "$conf_file"
                fi
                sed -Ei '/<VirtualHost \*:443>/,/<\/VirtualHost>/ {
                    /^[[:blank:]]*SSLEngine[[:blank:]]+on/!b
                    a\
        SSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384\
        SSLProtocol all -TLSv1 -SSLv2 -SSLv3 -TLSv1.1\
        SSLHonorCipherOrder on\
        SSLCompression off\
        SSLInsecureRenegotiation off
                    :next
                    n
                    b next
                }' "$conf_file"
                if [ ! -f /etc/ssl/certs/dummy.crt ]; then
                    openssl req -newkey rsa:2048 -nodes -keyout /etc/ssl/private/dummy.key -x509 -days 365 -out /etc/ssl/certs/dummy.crt -subj "/CN=localhost"
                fi
                sed -i "s|^\([[:blank:]]*SSLCertificateFile\).*|\1 /etc/ssl/certs/dummy.crt|" "$conf_file"
                sed -i "s|^\([[:blank:]]*SSLCertificateKeyFile\).*|\1 /etc/ssl/private/dummy.key|" "$conf_file"
                a2ensite default-ssl.conf
                ;;
            nginx)
                conf_file="/etc/nginx/nginx.conf"
                [ -d /etc/nginx/sites-enabled ] && conf_file="/etc/nginx/sites-enabled/default"
                sed -i '/listen.*:443/,/server_name/ {
                    /server_name/a\
    ssl_protocols TLSv1.2 TLSv1.3;\
    ssl_prefer_server_ciphers on;\
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES128+EEDH:!MD5:!RC4:!3DES";\
    ssl_session_tickets off;\
    ssl_session_cache shared:SSL:10m;
                }' "$conf_file"
                if [ ! -f /etc/ssl/nginx/dummy.crt ]; then
                    mkdir -p /etc/ssl/nginx
                    openssl req -newkey rsa:2048 -nodes -keyout /etc/ssl/nginx/dummy.key -x509 -days 365 -out /etc/ssl/nginx/dummy.crt -subj "/CN=localhost"
                fi
                sed -i "s|^\([[:blank:]]*ssl_certificate\).*|\1 /etc/ssl/nginx/dummy.crt;|" "$conf_file"
                sed -i "s|^\([[:blank:]]*ssl_certificate_key\).*|\1 /etc/ssl/nginx/dummy.key;|" "$conf_file"
                ;;
        esac
        systemctl restart $svc
    fi
done

# Correção para servidores DNS (vulnerabilidade 2)
for svc in "bind9" "named" "dnsmasq"; do
    if [[ $(systemctl is-active $svc 2>/dev/null) == "active" ]]; then
        case "$(dpkg -l | grep $svc)" in
            *bind9*)
                conf_file="/etc/bind/named.conf.options"
                sed -i '/options {/,/};/ {
                    /recursion/s/.*/\trecursion no;/
                    /allow-recursion/s/.*/\tallow-recursion { none; };/
                    t
                    /};/i \
        recursion no;\
        allow-recursion { none; };
                }' "$conf_file"
                systemctl restart bind9
                ;;
            *dnsmasq*)
                conf_file="/etc/dnsmasq.conf"
                sed -i '/^[^#]/ {
                    s/^\(cache-size\)=.*/\1=0/
                    t
                    s/^\(no-cache\)=.*/\1=/
                    t
                }' "$conf_file"
                if ! grep -q "^cache-size=0" "$conf_file"; then
                    echo "cache-size=0" >> "$conf_file"
                fi
                if ! grep -q "^no-cache" "$conf_file"; then
                    echo "no-cache" >> "$conf_file"
                fi
                systemctl restart dnsmasq
                ;;
        esac
    fi
done