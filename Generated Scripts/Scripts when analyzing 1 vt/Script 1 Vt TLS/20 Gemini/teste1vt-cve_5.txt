```bash
#!/bin/bash

# Identifica o serviço rodando na porta 5432 (PostgreSQL por padrão)
SERVICE=$(ss -lntp | grep ":5432" | awk '{split($5,a,":"); print a[1]}')

# Detecta o sistema operacional para determinar o arquivo de configuração correto
if [ -f /etc/os-release ]; then
  source /etc/os-release
  OS=$ID
else
  OS=$(uname -s)
fi

# Função para modificar a configuração do PostgreSQL
update_postgres_config() {
  CONFIG_FILE=""
  
  # Determina o arquivo de configuração com base no SO e existência
  if [ "$OS" = "ubuntu" ] || [ "$OS" = "debian" ]; then
    CONFIG_FILE="/etc/postgresql/*/main/postgresql.conf"
  elif [ -f /var/lib/pgsql/data/postgresql.conf ]; then
    CONFIG_FILE="/var/lib/pgsql/data/postgresql.conf" # RHEL/CentOS
  elif [ -f /etc/postgresql/postgresql.conf ]; then
        CONFIG_FILE="/etc/postgresql/postgresql.conf"
  else
    echo "Não foi possível encontrar o arquivo de configuração do PostgreSQL."
    exit 1
  fi
    
  CONFIG_FILE=$(eval echo $CONFIG_FILE)  # Expand glob expression
  
  if [ ! -f "$CONFIG_FILE" ]; then
    echo "Arquivo de configuração do PostgreSQL não encontrado: $CONFIG_FILE"
    exit 1
  fi

  # Remove configurações TLS obsoletas
  sudo sed -i '/ssl_protocols/d' "$CONFIG_FILE"

  # Adiciona configuração para TLS 1.2 e 1.3
  echo "ssl_min_protocol = TLSv1.2" | sudo tee -a "$CONFIG_FILE"

  # Reinicia o serviço PostgreSQL
  if systemctl is-active postgresql >/dev/null 2>&1; then
    sudo systemctl restart postgresql
    echo "Serviço PostgreSQL reiniciado."
  else
    echo "Serviço PostgreSQL não está ativo.  Por favor, inicie-o manualmente."
  fi
}

# Chama a função para atualizar a configuração do PostgreSQL
update_postgres_config

echo "Proteção contra vulnerabilidades CVE-2011-3389, CVE-2015-0204, CVE-2023-41928, CVE-2024-41270, CVE-2025-3200 aplicada."
```