#!/bin/bash
# Configura o firewall para bloquear o tráfego HTTP não criptografado na porta 80
iptables -A INPUT -p tcp --dport 80 -j DROP

# Configura o servidor web para redirecionar todas as requisições HTTP para HTTPS
if [ -f /etc/apache2/sites-available/000-default.conf ]; then
    sed -i '/<VirtualHost \*:80>/a RewriteEngine On\nRewriteCond %{HTTPS} off\nRewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]' /etc/apache2/sites-available/000-default.conf
    systemctl restart apache2
fi

if [ -f /etc/nginx/sites-available/default ]; then
    sed -i '/listen 80 default_server;/a return 301 https://$host$request_uri;' /etc/nginx/sites-available/default
    systemctl restart nginx
fi

# Verifica se o certificado SSL está configurado corretamente
if [ -f /etc/ssl/certs/ssl-cert-snakeoil.pem ]; then
    echo "Certificado SSL encontrado."
else
    echo "Certificado SSL não encontrado. Configurando auto-certificado..."
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj "/CN=localhost"
fi

# Verifica se o serviço HTTPS (porta 443) está ativo
if netstat -tuln | grep -q ':443'; then
    echo "Serviço HTTPS já está ativo."
else
    echo "Configurando e ativando o serviço HTTPS..."
    if [ -f /etc/apache2/sites-available/default-ssl.conf ]; then
        a2enmod ssl
        a2ensite default-ssl
        systemctl restart apache2
    elif [ -f /etc/nginx/sites-available/default-ssl ]; then
        ln -s /etc/nginx/sites-available/default-ssl /etc/nginx/sites-enabled/
        systemctl restart nginx
    fi
fi

echo "Vulnerabilidade corrigida com sucesso. Todos os dados sensíveis serão agora transmitidos via HTTPS."